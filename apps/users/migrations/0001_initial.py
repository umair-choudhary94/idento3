# Generated by Django 3.2.18 on 2023-05-09 08:04

import apps.users.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid
import webcampicture.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('tel', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tel')),
                ('dob', models.DateTimeField(blank=True, null=True, verbose_name='Date of Birth')),
                ('type', models.CharField(blank=True, choices=[('Personal', 'Personal'), ('Company', 'Company')], max_length=255, null=True, verbose_name='Account Type')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Company Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos', verbose_name='Company Logo')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures', verbose_name='Profile Picture')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('token', models.CharField(blank=True, max_length=256, null=True, verbose_name='Token')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(default=apps.users.models.generate_serial_number, max_length=32, verbose_name='Serial Number')),
                ('identifier', models.UUIDField(blank=True, default=uuid.uuid4, null=True, verbose_name='Identifier')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name')),
                ('document_type', models.CharField(blank=True, choices=[('Birth Certificate', 'Birth Certificate'), ('Drivers Licence', 'Drivers Licence'), ('Educational Certificate', 'Educational Certificate'), ('ID Card', 'ID Card'), ('Passport', 'Passport'), ('Proof of Address', 'Proof of Address'), ('Proof of Identity', 'Proof of Identity'), ('Other', 'Other')], max_length=32, null=True, verbose_name='Document Type')),
                ('document', models.ImageField(blank=True, null=True, upload_to='verification_document', verbose_name='Document')),
                ('document_back', models.ImageField(blank=True, null=True, upload_to='verification_document', verbose_name='Document Back')),
                ('selfie', models.ImageField(blank=True, null=True, upload_to='selfies', verbose_name='Selfie')),
                ('temp_document', webcampicture.fields.WebcamPictureField(blank=True, null=True, upload_to='temps', verbose_name='Temp Document')),
                ('temp_back', webcampicture.fields.WebcamPictureField(blank=True, null=True, upload_to='temps', verbose_name='Temp Document Back')),
                ('temp_selfie', webcampicture.fields.WebcamPictureField(blank=True, null=True, upload_to='temps', verbose_name='Temp Selfie')),
                ('verification_reason', models.CharField(blank=True, choices=[('Job', 'Job'), ('KYC', 'KYC')], max_length=255, null=True, verbose_name='Reason for ID Check')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Not Verified', 'Not Verified'), ('Verified', 'Verified')], max_length=16, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('card_issuer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.country', verbose_name='Card Issuer')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='identity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Identity',
                'verbose_name_plural': 'Identities',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.country'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
